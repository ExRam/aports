From 59951ce39f577a3ff233e8712554838753ec4193 Mon Sep 17 00:00:00 2001
From: Dominique Martinet <dominique.martinet@atmark-techno.com>
Date: Mon, 23 Dec 2024 14:42:15 +0900
Subject: [PATCH] temporary compat with libgpiod 1.x

Workaround abrupt breakages by libgpiod 2.x update
---
 tools/gpioget.c  | 18 ++++++++++++++++++
 tools/gpioinfo.c | 17 +++++++++++++++++
 tools/gpiomon.c  | 17 +++++++++++++++++
 tools/gpioset.c  | 22 ++++++++++++++++++++--
 4 files changed, 72 insertions(+), 2 deletions(-)

diff --git a/tools/gpioget.c b/tools/gpioget.c
index bad7667f8caf..c82815a9c291 100644
--- a/tools/gpioget.c
+++ b/tools/gpioget.c
@@ -2,6 +2,7 @@
 // SPDX-FileCopyrightText: 2017-2021 Bartosz Golaszewski <bartekgola@gmail.com>
 // SPDX-FileCopyrightText: 2022 Kent Gibson <warthog618@gmail.com>
 
+#include <ctype.h>
 #include <getopt.h>
 #include <gpiod.h>
 #include <stdio.h>
@@ -151,6 +152,23 @@ int main(int argc, char **argv)
 	argc -= i;
 	argv += i;
 
+	/* temporary compat patch with 1.x:
+	 * if chip is not set and first arg is either gpiochip or single digit,
+	 * assume it was intended as a chip. */
+	if (!cfg.chip_id && argc >= 2) {
+		if (!strncmp(argv[0], "/dev/gpiochip", strlen("/dev/gpiochip"))
+				|| !strncmp(argv[0], "gpiochip", strlen("gpiochip"))
+				|| (isdigit(argv[0][0]) && argv[0][1] == '\0')) {
+			fprintf(stderr, "WARNING: No gpiochip set and first argument looks like a chip, trying\n");
+			fprintf(stderr, "WARNING: compatibility with libgpiod 1.x.\n");
+			fprintf(stderr, "WARNING: This will stop working in alpine 3.22\n\n");
+			cfg.chip_id = argv[0];
+			cfg.numeric = true;
+			argc--;
+			argv++;
+		}
+	}
+
 	if (argc < 1)
 		die("at least one GPIO line must be specified");
 
diff --git a/tools/gpioinfo.c b/tools/gpioinfo.c
index d5e4751479db..9279ad45640f 100644
--- a/tools/gpioinfo.c
+++ b/tools/gpioinfo.c
@@ -2,6 +2,7 @@
 // SPDX-FileCopyrightText: 2017-2021 Bartosz Golaszewski <bartekgola@gmail.com>
 // SPDX-FileCopyrightText: 2022 Kent Gibson <warthog618@gmail.com>
 
+#include <ctype.h>
 #include <getopt.h>
 #include <gpiod.h>
 #include <stdarg.h>
@@ -235,6 +236,22 @@ int main(int argc, char **argv)
 	argc -= i;
 	argv += i;
 
+	/* temporary compat patch with 1.x:
+	 * if chip is not set and first arg is either gpiochip or single digit,
+	 * assume it was intended as a chip. */
+	if (!cfg.chip_id && argc >= 1) {
+		if (!strncmp(argv[0], "/dev/gpiochip", strlen("/dev/gpiochip"))
+				|| !strncmp(argv[0], "gpiochip", strlen("gpiochip"))
+				|| (isdigit(argv[0][0]) && argv[0][1] == '\0')) {
+			fprintf(stderr, "WARNING: No gpiochip set and first argument looks like a chip, trying\n");
+			fprintf(stderr, "WARNING: compatibility with libgpiod 1.x.\n");
+			fprintf(stderr, "WARNING: This will stop working in alpine 3.22\n\n");
+			cfg.chip_id = argv[0];
+			argc--;
+			argv++;
+		}
+	}
+
 	if (!cfg.chip_id)
 		cfg.by_name = true;
 
diff --git a/tools/gpiomon.c b/tools/gpiomon.c
index 88b5ccf67e3e..02f62ff29b4a 100644
--- a/tools/gpiomon.c
+++ b/tools/gpiomon.c
@@ -2,6 +2,7 @@
 // SPDX-FileCopyrightText: 2017-2021 Bartosz Golaszewski <bartekgola@gmail.com>
 // SPDX-FileCopyrightText: 2022 Kent Gibson <warthog618@gmail.com>
 
+#include <ctype.h>
 #include <getopt.h>
 #include <gpiod.h>
 #include <inttypes.h>
@@ -375,6 +376,22 @@ int main(int argc, char **argv)
 	argc -= i;
 	argv += i;
 
+	/* temporary compat patch with 1.x:
+	 * if chip is not set and first arg is either gpiochip or single digit,
+	 * assume it was intended as a chip. */
+	if (!cfg.chip_id && argc >= 2) {
+		if (!strncmp(argv[0], "/dev/gpiochip", strlen("/dev/gpiochip"))
+				|| !strncmp(argv[0], "gpiochip", strlen("gpiochip"))
+				|| (isdigit(argv[0][0]) && argv[0][1] == '\0')) {
+			fprintf(stderr, "WARNING: No gpiochip set and first argument looks like a chip, trying\n");
+			fprintf(stderr, "WARNING: compatibility with libgpiod 1.x.\n");
+			fprintf(stderr, "WARNING: This will stop working in alpine 3.22\n\n");
+			cfg.chip_id = argv[0];
+			argc--;
+			argv++;
+		}
+	}
+
 	if (argc < 1)
 		die("at least one GPIO line must be specified");
 
diff --git a/tools/gpioset.c b/tools/gpioset.c
index 46dde0789a17..266233053286 100644
--- a/tools/gpioset.c
+++ b/tools/gpioset.c
@@ -25,6 +25,7 @@ struct config {
 	bool interactive;
 	bool strict;
 	bool unquoted;
+	bool exit_after_set;
 	enum gpiod_line_bias bias;
 	enum gpiod_line_drive drive;
 	int toggles;
@@ -880,6 +881,23 @@ int main(int argc, char **argv)
 	argc -= i;
 	argv += i;
 
+	/* temporary compat patch with 1.x:
+	 * if chip is not set and first arg is either gpiochip or single digit,
+	 * assume it was intended as a chip. */
+	if (!cfg.chip_id && argc >= 2) {
+		if (!strncmp(argv[0], "/dev/gpiochip", strlen("/dev/gpiochip"))
+				|| !strncmp(argv[0], "gpiochip", strlen("gpiochip"))
+				|| (isdigit(argv[0][0]) && argv[0][1] == '\0')) {
+			fprintf(stderr, "WARNING: No gpiochip set and first argument looks like a chip, trying\n");
+			fprintf(stderr, "WARNING: compatibility with libgpiod 1.x.\n");
+			fprintf(stderr, "WARNING: This will stop working in alpine 3.22\n\n");
+			cfg.chip_id = argv[0];
+			cfg.exit_after_set = true;
+			argc--;
+			argv++;
+		}
+	}
+
 	if (argc < 1)
 		die("at least one GPIO line value must be specified");
 
@@ -987,10 +1005,10 @@ int main(int argc, char **argv)
 	if (cfg.interactive)
 		interact(requests, resolver, lines, offsets, values,
 			 cfg.unquoted);
-	else if (!cfg.toggles)
+	else if (!cfg.toggles && !cfg.exit_after_set)
 		wait_fd(gpiod_line_request_get_fd(requests[0]));
 #else
-	if (!cfg.toggles)
+	if (!cfg.toggles && !cfg.exit_after_set)
 		wait_fd(gpiod_line_request_get_fd(requests[0]));
 #endif
 
-- 
2.39.5

